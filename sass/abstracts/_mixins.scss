@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}
@mixin buttons-hover-active-effect {
    &:hover,
    &:focus {
        transform: translateY(-0.3rem);
        box-shadow: 0 1rem 2rem rgba($color-black, 0.2);
        outline: none;
    }
    &:active {
        transform: translateY(-0.1rem);
        box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);
    }
}
@mixin background-image-with-color-overlay($img-url) {
    background-size: cover;
    background-position: top;
    background-image: linear-gradient(
            to right bottom,
            rgba($color-primary-light, 0.8),
            rgba($color-primary-dark, 0.8)
        ),url($img-url);
}
@mixin clip-text-to-gradient-background {
    background: linear-gradient(to right, $color-primary-light, $color-primary-dark);
    background-clip: text;
    color: transparent;
        -webkit-text-fill-color: transparent;
        -webkit-background-clip: text;
}
@mixin center-element-absolute-position($top: 50%) {
    position: absolute;
    top: $top;
    left: 50%;
    transform: translate(-50%, -50%);
}
@mixin fixed-position($z-index:auto, $top:auto, $right:auto, $bottom:auto, $left:auto) {
    position: fixed;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
    z-index: $z-index;
}
@mixin circle-element($diamenter:5rem) {
    height: $diamenter;
    width: $diamenter;
    border-radius: 50%;
}
//MEDIA QUERIES MIXINS
@mixin respond($screen-size) { 
    @if $screen-size == phone {
        @media (max-width: #{(600/16)}em) { @content; } 
    } @else if $screen-size == tablet-port {
        @media (max-width: #{(900/16)}em) { @content; } 
    } @else if $screen-size == tablet-land {
        @media (max-width: #{(1200/16)}em) { @content; } 
    } @else if $screen-size == big-desktop {
        @media (min-width: #{(1800/16)}em) { @content; } 
    } @else{
        @error "Unknown screen size! $screen-size: #{$screen-size}.";
    }
}